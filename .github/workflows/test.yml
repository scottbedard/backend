name: test

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql-service:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: testing
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 33306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      APP_URL: "http://127.0.0.1:8000"
      DB_CONNECTION: mysql
      DB_DATABASE: testing
      DB_HOST: 127.0.0.1
      DB_PASSWORD: password
      DB_PORT: 33306
      DB_USERNAME: root
      LARAVEL_DUSK: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Configure environment
        run: |
          cp ./sandbox/.env.example ./sandbox/.env
          cp ./package ./sandbox/packages/bedard/backend
          sed -i -e 's/BROADCAST_DRIVER=pusher/BROADCAST_DRIVER=log/g' ./sandbox/.env
          chmod -R 777 ./sandbox/storage ./sandbox/bootstrap/cache

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Node dependencies
        run: |
          cd ./sandbox/packages/bedard/backend
          pnpm install

      - name: Build client
        run: |
          cd ./sandbox/packages/bedard/backend
          pnpm run build

      - name: Composer install
        run: |
          cd ./sandbox
          composer install

      - name: Generate application key
        run: |
          cd ./sandbox
          php artisan key:generate

      - name: Run migrations
        run: |
          cd ./sandbox
          php artisan migrate

      - name: Publish assets
        run: |
          cd ./sandbox
          php artisan vendor:publish --tag backend

      - name: PHPUnit
        run: |
          cd ./sandbox
          php artisan test
