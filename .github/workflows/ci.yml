name: test

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql-service:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: testing
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 33306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      APP_URL: "http://127.0.0.1:8000"
      DB_CONNECTION: mysql
      DB_DATABASE: testing
      DB_HOST: 127.0.0.1
      DB_PASSWORD: password
      DB_PORT: 33306
      DB_USERNAME: root

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build client
        run: |
          cd package
          npm install
          npm run build

      # - name: Configure directories
      #   run: |
      #     mv sandbox/.env.example .env
      #     mv sandbox/* .
      #     mkdir packages
      #     mkdir packages/bedard
      #     mkdir packages/bedard/backend
      #     mv package/* packages/bedard/backend
      #     chmod -R 777 ./storage ./bootstrap/cache
      #     sed -i -e 's_/var/www/html_/home/runner/work/backend/backend_g' composer.json
      #     sed -i -e 's_/var/www/html_/home/runner/work/backend/backend_g' composer.lock

      # - name: Composer install
      #   run: composer install

      # - name: Generate application key
      #   run: php artisan key:generate

      # - name: Run migrations
      #   run: php artisan migrate

      # - name: Publish assets
      #   run: php artisan vendor:publish --tag backend

      # - name: PHPUnit
      #   run: php artisan test

  # deploy:
  #   name: deploy
  #   needs: [test]
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Deploy
  #       run: curl ${{secrets.DEPLOY_URL}}
